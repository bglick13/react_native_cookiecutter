services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.api.entryPoints=traefik"
     - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
     - "traefik.http.routers.api.service=api@internal"
     - "traefik.http.routers.api.middlewares=api-auth"
     - "traefik.http.middlewares.api-auth.basicauth.users=test:test"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    stdin_open: true
    volumes:
     - './frontend:/home/app'
     - notused:/home/app/node_modules
    environment:
     - NODE_ENV=development
     - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
     - CHOKIDAR_USEPOLLING=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.docker.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=19006"
  
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: python ./main.py
    tty: true
    volumes:
      - ./backend:/app
    environment:
      PYTHONPATH: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.docker.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8888"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    networks:
      - default
    depends_on:
      - db
    expose:
      - 5050
    environment:
      - PGADMIN_LISTEN_PORT=5050
      - PGADMIN_DEFAULT_EMAIL=root@example.com
      - PGADMIN_DEFAULT_PASSWORD=root
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.docker.localhost`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=5050"
  
  db:
    image: postgres:12
    networks:
      - default
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_SERVER={{cookiecutter.db_server}}
      - POSTGRES_USER={{cookiecutter.db_user}}
      - POSTGRES_PASSWORD={{cookiecutter.db_password}}
      - POSTGRES_DB={{cookiecutter.db_name}}

volumes:
  app-db-data:
  notused: